server {
	listen 80;
	listen [::]:80;
	server_name vmess.dns.army zlibrary.dns.army blist.dns.army;

	charset 'utf-8';	# 防止txt文本出现乱码，一定要加单引号

	location /.well-known/pki-validation/ {
        ###############添加这3行
		# .well-known/pki-validation/
        # proxy_buffer_size 64k;
        # proxy_buffers   32 32k;
        # proxy_busy_buffers_size 128k;
        ###############添加这3行

		# 去掉_CG
        # if ($request_uri ~ ^(/ProductionManagement/.*)_CG(.*)$) {
        # 	#  rewrite ^ $1$2 break;
        # 	return 301 http://127.0.0.1:8019$1$2;  
        # }

		# sub_filter '/.well-known/pki-validation/' '/';			# 网站域名，反代域名
		rewrite ^/.well-known/pki-validation/(.*)$ /$1 break;

		root	/etc/nginx/conf.d;
		index	index.html index.htm;
	}

    location /main {
    index index.html;
    default_type text/html;
        #echo "remote_addr = $remote_addr";
        #echo "******";
        #echo "args = $args";
        #echo "******";
        #echo "document_root = $document_root";
        #echo "******";
        #echo "document_uri = $document_uri";
        #echo "******";
        #echo "host = $host";
        #echo "******";
        #echo "http_user_agent = $http_user_agent";
        #echo "******";
        #echo "http_cookie = $http_cookie"
        #echo "******";
        limit_rate 10240;
        #echo "limit_rate = $limit_rate";
        #echo "******";
        #echo "remote_prot = $remote_port";
        #echo "******";
        #echo "remote_user = $remote_user";
        #echo "******";
        #echo "request_body_file = $request_body_file";
        #echo "******";
        #echo "request_method = $request_method";
        #echo "******";
        #echo "request_filename = $request_filename";
        #echo "******";
        #echo "request_uri = $request_uri";
        #echo "******";
        #echo "scheme = $scheme";
        #echo "******";
        #echo "server_protocol = $server_protocol";
        #echo "******";
        #echo "server_addr = $server_addr";
        #echo "******";
        #echo "server_name = $server_name";
        #echo "******";
        #echo "server_port = $server_port";
        #echo "******";
    }

	# location和proxy_pass都带/ 去除 http://api/ 的 api后面带/, 则会移除api这个上下文
	location ^~/api/ {
		proxy_set_header Host $host;
		proxy_set_header  X-Real-IP        $remote_addr;
		proxy_set_header  X-Forwarded-For  $proxy_add_x_forwarded_for;
		proxy_set_header X-NginX-Proxy true;

		proxy_pass http://www.vmess.com/api/;
	}

	# rewrite去除 http://aaa.com/system0 的 system0后面不带/, 通过rewrite移除api这个上下文
	location ^~/system0/ {
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP			$remote_addr;
		proxy_set_header X-Forwarded-For	$proxy_add_x_forwarded_for;
		proxy_set_header X-NginX-Proxy true;

		rewrite ^/system0/(.*)$ /$1 break;
		proxy_pass http://bbb.com;
	}

	# location带/, proxy_pass不带上下文去除 转发示例：# 请求：http://aaa.com/system1/path/request # 转发：http://bbb.com/path/request
	location ^~ /system1/  {
		proxy_pass http://bbb.com;
	}

	# 保留 1. location不带/, proxy_pass不带 上下文保留 转发示例# 请求：http://aaa.com/system2/path/request# 转发：http://bbb.com/system/path/request
	location ^~ /system2 {
		proxy_pass http://bbb.com;
	}

    location / {
		return 302 https://$host$request_uri;
	}
}

server {
    listen 80;
    listen [::]:80;
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name 0551eye.com www.0551eye.com;

    charset 'utf-8';	# 防止txt文本出现乱码，一定要加单引号

    location / {
        ###############添加这3行
		# .well-known/pki-validation/
        # proxy_buffer_size 64k;
        # proxy_buffers   32 32k;
        # proxy_busy_buffers_size 128k;
        ###############添加这3行

		# 去掉_CG
        # if ($request_uri ~ ^(/ProductionManagement/.*)_CG(.*)$) {
        # 	#  rewrite ^ $1$2 break;
        # 	return 301 http://127.0.0.1:8019$1$2;  
        # }

        root	/mnt/sda3/HTML-404;
		index	index.html index.htm;
    }
}